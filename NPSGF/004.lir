struct st {
  f1:int
  f2:&int
}

g1:int
g2:&int
g3:&st
test:&() -> int

fn main() -> int {
entry:
  $ret 0
}

fn test() -> int {
let _lo1:int, _lo2:int, _lo3:int, _t10:int, _t11:&int, _t12:int, _t13:int, _t14:int, _t15:int, _t16:int, _t17:int, _t18:&&int, _t19:&int, _t20:int, _t21:&int, _t22:int, _t23:int, _t24:int, _t25:int, _t26:int, _t4:&int, _t5:int, _t6:int, _t7:int, _t8:int, _t9:int, id0:&int, id1:&int, id10:int, id11:&&int, id2:int, id3:int, id4:&int, id5:&int, id6:&&int, id7:&&int, id8:&&int, id9:int
bb1:
  $branch 4 bb2 bb3

bb10:
  _t12 = $arith sub 0 _lo2
  _t11 = $gep id4 _t12
  $store _t11 id3
  id2 = $copy id3
  _t13 = $arith sub 0 7
  _t14 = $cmp eq id2 _t13
  $store id5 _t14
  $jump bb7

bb11:
  _t10 = $arith sub 0 10
  _lo2 = $copy _t10
  $jump bb10

bb12:
  id10 = $copy _lo3
  $store id11 g2
  _t26 = $arith sub 0 1
  $ret _t26

bb13:
  _lo3 = $copy 0
  $jump bb12

bb14:
  _lo3 = $copy 1
  $jump bb12

bb2:
  _t4 = $gep g2 3
  _t5 = $load _t4
  _t6 = $load id0
  _t7 = $arith sub _t5 _t6
  $branch _t7 bb5 bb6

bb3:
  _t24 = $arith sub 0 9
  _t25 = $arith sub 0 _t24
  $branch _t25 bb13 bb14

bb4:
  $branch _lo1 bb8 bb9

bb5:
  _lo1 = $copy 0
  $jump bb4

bb6:
  _lo1 = $copy 1
  $jump bb4

bb7:
  _t22 = $load id5
  $store g2 _t22
  _t23 = $arith sub 0 7
  id2 = $copy _t23
  $jump bb1

bb8:
  g1 = $copy g1
  $store id1 id2
  _t8 = $arith sub 0 2
  _lo2 = $copy _t8
  _t9 = $cmp neq _lo2 0
  $branch _t9 bb11 bb10

bb9:
  _t15 = $cmp neq id6 id7
  id6 = $alloc _t15 [_alloc1]
  _t16 = $load id1
  _t17 = $arith sub 0 _t16
  _t18 = $gep id7 _t17
  _t19 = $load _t18
  _t20 = $load _t19
  id9 = $copy _t20
  _t21 = $gep id0 g1
  $store _t21 3
  $jump bb7

entry:
  id0 = $copy id0
  id3 = $copy id2
  id2 = $copy id3
  id6 = $copy id6
  id7 = $copy id8
  id10 = $copy g1
  $jump bb1
}